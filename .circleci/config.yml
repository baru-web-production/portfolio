version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.7.2-node-browsers
        environment:
          - BUNDLER_VERSION: 2.2.9
          - RAILS_ENV: 'test'
      - image: circleci/mysql:8.0.23
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          - MYSQL_ROOT_HOST: '%'

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.2.9
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run: mv config/database.yml.ci config/database.yml 

      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # rubocop
      - run:
          name: Rubocop
          command: bundle exec rubocop

      # webpack
      - run:
          name: yarn Install
          command: yarn install

      - run: bundle exec bin/webpack

      # rspec
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"
            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      
  # AWS
  deploy:
    docker:
      - image: circleci/python:3.6-jessie
      - image: buildpack-deps:trusty
    working_directory: ~/
    steps:
      - run: sudo pip install awscli
      - run:
          name: "authorize-security-group-ingress"
          command: |
            IP=`curl -s ifconfig.me`
            echo "#!/bin/bash" > ./sg.sh
            echo "aws configure set region ap-northeast-1" >> ./sg.sh
            echo "aws ec2 authorize-security-group-ingress --group-id sg-060d2046c8a3930ba --protocol tcp --port 22 --cidr ${IP}/32" >> ./sg.sh
            bash ./sg.sh
      # SSH認証
      - add_ssh_keys:
          fingerprints:
            - "81:c5:68:da:f6:10:62:d4:2a:c8:1b:d3:50:8b:78:7c"
      - run:
          name: deploy
          command: ssh -oStrictHostKeyChecking=no circleci@18.181.158.76 "bash /home/circleci/script/deploy.sh"
      # CircleCI
      - deploy:
          name: Capistrano deploy
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              exit 0
            fi
            bundle exec cap production deploy
      - run:
          name: "revoke-security-group-ingress"
          command: |
            IP=`curl -s ifconfig.me`
            echo "#!/bin/bash" > ./sg.sh
            echo "aws configure set region ap-northeast-1" >> ./sg.sh
            echo "aws ec2 revoke-security-group-ingress --group-id sg-060d2046c8a3930ba --protocol tcp --port 22 --cidr ${IP}/32" >> ./sg.sh
            bash ./sg.sh