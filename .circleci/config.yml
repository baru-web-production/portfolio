version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.7.2-node-browsers
        environment:
          - BUNDLER_VERSION: 2.2.9
          - RAILS_ENV: 'test'
      - image: circleci/mysql:8.0.23
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          - MYSQL_ROOT_HOST: '%'

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.2.9
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run: mv config/database.yml.ci config/database.yml 

      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # rubocop
      - run:
          name: Rubocop
          command: bundle exec rubocop

      # webpack
      - run:
          name: yarn Install
          command: yarn install

      - run: bundle exec bin/webpack

      # rspec
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"
            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      # SSH認証
      - add_ssh_keys:
          fingerprints:
            - "44:dd:9b:4b:85:5e:6c:93:c6:29:c7:f0:5d:70:23:e5"

      # EC2にデプロイ
      - deploy:
          name: Capistrano deploy
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              exit 0
            fi
            bundle exec cap production deploy